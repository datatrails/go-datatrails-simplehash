// Maintainers, please refer to the style guide here:
//     https://developers.google.com/protocol-buffers/docs/style

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: datatrails-common-api/assets/v2/assets/miscmessages.proto

package assets

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EventCommitMessage is used between the khipu assemble and event commit stages
type EventCommitMessage struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Message *EventMessage          `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // repeated bytes khipu_transaction_hashes = 2;
	// It is very cumbersome to represent the PackedInput as proto. Instead we
	// have used go gob for simplicity, but we do want internal schema
	// versioning hence khipu_packed_input_ver
	KhipuPackedInputVer       int32  `protobuf:"varint,6,opt,name=khipu_packed_input_ver,json=khipuPackedInputVer,proto3" json:"khipu_packed_input_ver,omitempty"` // recievers ignore versions != what they are built against
	KhipuPackedAssemblyInputs []byte `protobuf:"bytes,7,opt,name=khipu_packed_assembly_inputs,json=khipuPackedAssemblyInputs,proto3" json:"khipu_packed_assembly_inputs,omitempty"`
	KhipuPackedCommitInput    []byte `protobuf:"bytes,8,opt,name=khipu_packed_commit_input,json=khipuPackedCommitInput,proto3" json:"khipu_packed_commit_input,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *EventCommitMessage) Reset() {
	*x = EventCommitMessage{}
	mi := &file_datatrails_common_api_assets_v2_assets_miscmessages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventCommitMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCommitMessage) ProtoMessage() {}

func (x *EventCommitMessage) ProtoReflect() protoreflect.Message {
	mi := &file_datatrails_common_api_assets_v2_assets_miscmessages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCommitMessage.ProtoReflect.Descriptor instead.
func (*EventCommitMessage) Descriptor() ([]byte, []int) {
	return file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDescGZIP(), []int{0}
}

func (x *EventCommitMessage) GetMessage() *EventMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *EventCommitMessage) GetKhipuPackedInputVer() int32 {
	if x != nil {
		return x.KhipuPackedInputVer
	}
	return 0
}

func (x *EventCommitMessage) GetKhipuPackedAssemblyInputs() []byte {
	if x != nil {
		return x.KhipuPackedAssemblyInputs
	}
	return nil
}

func (x *EventCommitMessage) GetKhipuPackedCommitInput() []byte {
	if x != nil {
		return x.KhipuPackedCommitInput
	}
	return nil
}

// EventReceiptMessage is used between the event commit and commit receipt stages
type EventReceiptMessage struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Message               *EventMessage          `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	CommitTransactionHash []byte                 `protobuf:"bytes,2,opt,name=commit_transaction_hash,json=commitTransactionHash,proto3" json:"commit_transaction_hash,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventReceiptMessage) Reset() {
	*x = EventReceiptMessage{}
	mi := &file_datatrails_common_api_assets_v2_assets_miscmessages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventReceiptMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventReceiptMessage) ProtoMessage() {}

func (x *EventReceiptMessage) ProtoReflect() protoreflect.Message {
	mi := &file_datatrails_common_api_assets_v2_assets_miscmessages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventReceiptMessage.ProtoReflect.Descriptor instead.
func (*EventReceiptMessage) Descriptor() ([]byte, []int) {
	return file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDescGZIP(), []int{1}
}

func (x *EventReceiptMessage) GetMessage() *EventMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *EventReceiptMessage) GetCommitTransactionHash() []byte {
	if x != nil {
		return x.CommitTransactionHash
	}
	return nil
}

// PublicAssetURLResponse is the public url response when calling the :publicurl verb
type PublicAssetURLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Publicurl     string                 `protobuf:"bytes,1,opt,name=publicurl,proto3" json:"publicurl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicAssetURLResponse) Reset() {
	*x = PublicAssetURLResponse{}
	mi := &file_datatrails_common_api_assets_v2_assets_miscmessages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicAssetURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicAssetURLResponse) ProtoMessage() {}

func (x *PublicAssetURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datatrails_common_api_assets_v2_assets_miscmessages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicAssetURLResponse.ProtoReflect.Descriptor instead.
func (*PublicAssetURLResponse) Descriptor() ([]byte, []int) {
	return file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDescGZIP(), []int{2}
}

func (x *PublicAssetURLResponse) GetPublicurl() string {
	if x != nil {
		return x.Publicurl
	}
	return ""
}

// PublicEventURLResponse is the public url response when calling the :publicurl verb
type PublicEventURLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Publicurl     string                 `protobuf:"bytes,1,opt,name=publicurl,proto3" json:"publicurl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicEventURLResponse) Reset() {
	*x = PublicEventURLResponse{}
	mi := &file_datatrails_common_api_assets_v2_assets_miscmessages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicEventURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicEventURLResponse) ProtoMessage() {}

func (x *PublicEventURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datatrails_common_api_assets_v2_assets_miscmessages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicEventURLResponse.ProtoReflect.Descriptor instead.
func (*PublicEventURLResponse) Descriptor() ([]byte, []int) {
	return file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDescGZIP(), []int{3}
}

func (x *PublicEventURLResponse) GetPublicurl() string {
	if x != nil {
		return x.Publicurl
	}
	return ""
}

var File_datatrails_common_api_assets_v2_assets_miscmessages_proto protoreflect.FileDescriptor

const file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDesc = "" +
	"\n" +
	"9datatrails-common-api/assets/v2/assets/miscmessages.proto\x12\farchivist.v2\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a9datatrails-common-api/assets/v2/assets/eventmessage.proto\"\x93\x02\n" +
	"\x12EventCommitMessage\x124\n" +
	"\amessage\x18\x01 \x01(\v2\x1a.archivist.v2.EventMessageR\amessage\x123\n" +
	"\x16khipu_packed_input_ver\x18\x06 \x01(\x05R\x13khipuPackedInputVer\x12?\n" +
	"\x1ckhipu_packed_assembly_inputs\x18\a \x01(\fR\x19khipuPackedAssemblyInputs\x129\n" +
	"\x19khipu_packed_commit_input\x18\b \x01(\fR\x16khipuPackedCommitInputJ\x04\b\x02\x10\x03J\x04\b\x03\x10\x04J\x04\b\x04\x10\x05J\x04\b\x05\x10\x06\"\x83\x01\n" +
	"\x13EventReceiptMessage\x124\n" +
	"\amessage\x18\x01 \x01(\v2\x1a.archivist.v2.EventMessageR\amessage\x126\n" +
	"\x17commit_transaction_hash\x18\x02 \x01(\fR\x15commitTransactionHash\"\xdf\x01\n" +
	"\x16PublicAssetURLResponse\x12\x1c\n" +
	"\tpublicurl\x18\x01 \x01(\tR\tpublicurl:\xa6\x01\x92A\xa2\x01\n" +
	"422A url that can be used to access the public asset.2j{ \"publicurl\": \"https://app.datatrails.ai/archivist/v2/publicassets/add30235-1424-4fda-840a-d5ef82c4c96f\"}\"\x8c\x02\n" +
	"\x16PublicEventURLResponse\x12\x1c\n" +
	"\tpublicurl\x18\x01 \x01(\tR\tpublicurl:\xd3\x01\x92A\xcf\x01\n" +
	"422A url that can be used to access the public event.2\x96\x01{ \"publicurl\": \"https://app.datatrails.ai/archivist/v2/publicassets/add30235-1424-4fda-840a-d5ef82c4c96f/events/11bf5b37-e0b8-42e0-8dcf-dc8c4aefc000\"}BLZJgithub.com/datatrails/go-datatrails-common-api-gen/assets/v2/assets;assetsb\x06proto3"

var (
	file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDescOnce sync.Once
	file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDescData []byte
)

func file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDescGZIP() []byte {
	file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDescOnce.Do(func() {
		file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDesc), len(file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDesc)))
	})
	return file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDescData
}

var file_datatrails_common_api_assets_v2_assets_miscmessages_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_datatrails_common_api_assets_v2_assets_miscmessages_proto_goTypes = []any{
	(*EventCommitMessage)(nil),     // 0: archivist.v2.EventCommitMessage
	(*EventReceiptMessage)(nil),    // 1: archivist.v2.EventReceiptMessage
	(*PublicAssetURLResponse)(nil), // 2: archivist.v2.PublicAssetURLResponse
	(*PublicEventURLResponse)(nil), // 3: archivist.v2.PublicEventURLResponse
	(*EventMessage)(nil),           // 4: archivist.v2.EventMessage
}
var file_datatrails_common_api_assets_v2_assets_miscmessages_proto_depIdxs = []int32{
	4, // 0: archivist.v2.EventCommitMessage.message:type_name -> archivist.v2.EventMessage
	4, // 1: archivist.v2.EventReceiptMessage.message:type_name -> archivist.v2.EventMessage
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_datatrails_common_api_assets_v2_assets_miscmessages_proto_init() }
func file_datatrails_common_api_assets_v2_assets_miscmessages_proto_init() {
	if File_datatrails_common_api_assets_v2_assets_miscmessages_proto != nil {
		return
	}
	file_datatrails_common_api_assets_v2_assets_eventmessage_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDesc), len(file_datatrails_common_api_assets_v2_assets_miscmessages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_datatrails_common_api_assets_v2_assets_miscmessages_proto_goTypes,
		DependencyIndexes: file_datatrails_common_api_assets_v2_assets_miscmessages_proto_depIdxs,
		MessageInfos:      file_datatrails_common_api_assets_v2_assets_miscmessages_proto_msgTypes,
	}.Build()
	File_datatrails_common_api_assets_v2_assets_miscmessages_proto = out.File
	file_datatrails_common_api_assets_v2_assets_miscmessages_proto_goTypes = nil
	file_datatrails_common_api_assets_v2_assets_miscmessages_proto_depIdxs = nil
}
